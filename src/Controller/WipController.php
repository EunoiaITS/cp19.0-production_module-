<?php
namespace App\Controller;

use App\Controller\AppController;
use App\Model\Entity\WipSection;
use Cake\ORM\TableRegistry;

/**
 * Wip Controller
 *
 * @property \App\Model\Table\WipTable $Wip
 *
 * @method \App\Model\Entity\Wip[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class WipController extends AppController
{

    public $paginate = [
        // Other keys here.
        'maxLimit' => 10
    ];

    public function initialize()
    {
        parent::initialize();
        $this->viewBuilder()->setLayout('mainframe');// TODO: Change the autogenerated stub
    }

    /**
     * Index method
     *
     * @return \Cake\Http\Response|void
     */
    public function index()
    {
        $this->loadModel('Wip');
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $wip = $this->paginate($this->Wip->find('all'));
        foreach ($wip as $wp){
            $sn_details = $this->SerialNumber->find('all')
                ->Where(['id'=>$wp->serial_no]);
            foreach ($sn_details as $snd){
                $wp->sn_details = $snd;
            }
            $wip_sec = $this->WipSection->find('all')
                ->Where(['wip_id'=>$wp->id]);
            foreach ($wip_sec as $wips){
                if($wips->status === 'requested'){
                    $wp->status = 'Pending';
                }
            }
        }
        $this->set('wip',$wip);
    }

    /**
     * View method
     *
     * @param string|null $id Wip id.
     * @return \Cake\Http\Response|void
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $wip = $this->Wip->find('all')
            ->where(['id'=> $id]);
        foreach ($wip as $w) {
            $sn_details = $this->SerialNumber->find('all')
                ->Where(['id' => $w->serial_no]);
            foreach ($sn_details as $snd) {
                $w->sn_details = $snd;
            }
            $wip_sec = $this->WipSection->find('all')
                ->Where(['wip_id'=>$id]);
                $w->wip_sec = $wip_sec;
        }
        $this->set('pic', $this->Auth->user('username'));
        $this->set('wip', $wip);
    }

    /**
     * Add method
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $this->loadModel('SerialNumber');
        $this->loadModel('SerialNumberChild');
        $this->loadModel('WipSection');
        $sn = $this->SerialNumber->find('all');
        $sn_id =null;
        foreach($sn as $s){
            $sn_wip = $sn_wip_sections = $action = '';
            $sn_items = $this->SerialNumberChild->find('all')
                ->Where(['serial_number_id'=>$s->id]);
            $sn_id .= '{label:"'.$s->so_no.'",idx:"'.$s->id.'",idy:"'.$s->model.'",idz:"'.$s->version.'",';
            $item_ids = '';
            foreach ($sn_items as $items){
                $item_ids .= '"'.$items->id.'",';
            }
            $item_ids = rtrim($item_ids,',');
            $sn_id .= 'item_ids:['.$item_ids.'],';
            $exCount = 0;
            $exWip = $this->Wip->find('all')
                ->where(['so_no' => $s->so_no]);
            foreach ($exWip as $ew){
                $exCount++;
                if($exCount > 0){
                    $sn_wip = $ew->id;
                    $exWipSections = $this->WipSection->find('all')
                        ->where(['wip_id' => $ew->id]);
                    foreach ($exWipSections as $sec){
                        $sn_wip_sections .= '{secName:"'.$sec->section.'",opName:"'.$sec->operator_name.'",supName:"'.$sec->supervisor_name.'"},';
                    }
                    $action = 'edit';
                }else{
                    $action = 'add';
                }
            }
            $sn_id .= 'wip_action:"'.$action.'",';
            $sn_wip_sections = rtrim($sn_wip_sections, ',');
            $sn_id .= 'wipId:"'.$sn_wip.'",';
            $sn_id .= 'sections:['.$sn_wip_sections.']},';
        }
        $wip = $this->Wip->newEntity();
        if ($this->request->is('post')) {
            if($this->request->getData('action') == 'edit'){
                $wip_no = $this->request->getData('wipId');
                for($i =1;$i<=9;$i++){
                    if($this->request->getData('cb_'.$i) != ''){
                        $wips = $this->WipSection->newEntity();
                        $wips->wip_id = $wip_no;
                        $wips->operator_name =$this->request->getData('operator_name_'.$i);
                        $wips->supervisor_name =  $this->request->getData('supervisor_name_'.$i);
                        $wips->section = $this->request->getData('section'.$i);
                        $wips->status = 'requested';
                        $this->WipSection->save($wips);
                    }
                }
                $this->Flash->success(__('The wp has been saved.'));

                return $this->redirect(['action' => 'index']);
            }else{
                $wip = $this->Wip->patchEntity($wip, $this->request->getData());
                if ($this->Wip->save($wip)) {
                    $wip_no = $this->Wip->find('all', ['fields' => 'id'])->last();
                    for($i =1;$i<=9;$i++){
                        if($this->request->getData('cb_'.$i) != ''){
                            $wips = $this->WipSection->newEntity();
                            $wips->wip_id = $wip_no['id'];
                            $wips->operator_name =$this->request->getData('operator_name_'.$i);
                            $wips->supervisor_name =  $this->request->getData('supervisor_name_'.$i);
                            $wips->section = $this->request->getData('section'.$i);
                            $wips->status = 'requested';
                            $this->WipSection->save($wips);
                        }
                    }
                    $this->Flash->success(__('The wp has been saved.'));

                    return $this->redirect(['action' => 'index']);
                }
                $this->Flash->error(__('The wp could not be saved. Please, try again.'));
            }
        }
        $count = $this->Wip->find('all')->last();
        $this->set(compact('wip'));
        $this->set('sn_id',rtrim($sn_id,','));
        $this->set('wp_no', (isset($count->id) ? ($count->id + 1) : 1));
        $this->set('pic', $this->Auth->user('username'));
    }

    /**
     * Edit method
     *
     * @param string|null $id Wip id.
     * @return \Cake\Http\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $this->loadModel('WipSection');
        $wip = $this->WipSection->get($id, [
            'contain' => []
        ]);

        if ($this->request->is(['patch', 'post', 'put'])) {
            $wip = $this->WipSection->patchEntity($wip, $this->request->getData());
            if ($this->WipSection->save($wip)) {
                $this->Flash->success(__('The wip has been saved.'));

                return $this->redirect(['action' => 'view',$wip->wip_id]);
            }
            $this->Flash->error(__('The wip could not be saved. Please, try again.'));
        }
        $this->set(compact('wip'));
    }

    /**
     * Delete method
     *
     * @param string|null $id Wip id.
     * @return \Cake\Http\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $wip = $this->Wip->get($id);
        if ($this->Wip->delete($wip)) {
            $this->Flash->success(__('The wip has been deleted.'));
        } else {
            $this->Flash->error(__('The wip could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }
    public function report(){
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $wip = $this->paginate($this->Wip->find('all'));
        foreach ($wip as $wp){
            $sn_details = $this->SerialNumber->find('all')
                ->Where(['id'=>$wp->serial_no]);
            foreach ($sn_details as $snd){
                $wp->sn_details = $snd;
            }
            $wip_sec = $this->WipSection->find('all')
                ->Where(['wip_id'=>$wp->id]);
            $wp->wip_sec= $wip_sec;
        }
        $this->set('wip', $wip);
    }
    public function sectionStat(){
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $section = $this->request->getQuery('section');
        $wip = $this->paginate($this->Wip->find('all'));
        foreach ($wip as $wp){
            $sn_details = $this->SerialNumber->find('all')
                ->Where(['id'=>$wp->serial_no]);
            foreach ($sn_details as $snd){
                $wp->sn_details = $snd;
            }
            $wip_sec = $this->WipSection->find('all')
                ->Where(['wip_id'=>$wp->id])
                ->Where(['section'=> $section]);
            $nxts = '';
            if(isset($section)){
                if($section== 'welding 1'){
                    $nxts = 'Main link Tank';
                }elseif ($section == 'main link tank'){
                    $nxts = 'Drive Mechanism';
                }elseif ($section == 'drive mechanism'){
                    $nxts = 'Vacuum Chamber';
                }elseif ($section == 'vacuum chamber'){
                    $nxts = 'Welding 2';
                }elseif ($section == 'welding 2'){
                    $nxts = 'Bta';
                }elseif ($section == 'bta'){
                    $nxts = 'Metal Clad';
                }elseif ($section == 'metal clad'){
                    $nxts = 'Wiring';
                }elseif ($section == 'wiring'){
                    $nxts = 'Testing';
                }elseif ($section == 'testing'){
                    $nxts = '';
                }
            }
            $nxt_sec = $this->WipSection->find('all')
                ->Where(['wip_id'=>$wp->id])
                ->Where(['section'=> $nxts]);
            foreach ($nxt_sec as $nxt){
                $wp->nxt_sec = $nxt;
            }
            $wp->wip_sec= $wip_sec;
        }
        $this->set('s',$section);
        $this->set('wip', $wip);
    }
    public function statReport(){
        $model1 = new \stdClass();
        $model2 = new \stdClass();
        $model3 = new \stdClass();
        $model4 = new \stdClass();
        $model5 = new \stdClass();
        $model6 = new \stdClass();
        $model7 = new \stdClass();
        $model8 = new \stdClass();
        $model9 = new \stdClass();
        $var11 = $var12 = $var13 = $var14 = $var15 = $var16 = $var17 = $var18 = $var19 = 0;
        $a11 = $a12 = $a13 = $a14 = $a15 = $a16 = $a17 = $a18 = $a19 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model1 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'RMU INS24']);
        foreach ($sn_model1 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var11++;
                        if($wps->status == 'acknowledged'){
                            $a11++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var12++;
                        if($wps->status == 'acknowledged'){
                            $a12++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var13++;
                        if($wps->status == 'acknowledged'){
                            $a13++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var14++;
                        if($wps->status == 'acknowledged'){
                            $a14++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var15++;
                        if($wps->status == 'acknowledged'){
                            $a15++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var16++;
                        if($wps->status == 'acknowledged'){
                            $a16++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var17++;
                        if($wps->status == 'acknowledged'){
                            $a17++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var18++;
                        if($wps->status == 'acknowledged'){
                            $a19++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var19++;
                        if($wps->status == 'acknowledged'){
                            $a19++;
                        }
                    }
                }
            }
        }
        $model1->name = 'RMU INS24';
        $model1->var11 = $var11;
        $model1->var12 = $var12;
        $model1->var13 = $var13;
        $model1->var14 = $var14;
        $model1->var15 = $var15;
        $model1->var16 = $var16;
        $model1->var17 = $var17;
        $model1->var18 = $var18;
        $model1->var19 = $var19;

        $model1->a11 = $a11;
        $model1->a12 = $a12;
        $model1->a13 = $a13;
        $model1->a14 = $a14;
        $model1->a15 = $a15;
        $model1->a16 = $a16;
        $model1->a17 = $a17;
        $model1->a18 = $a18;
        $model1->a19 = $a19;
        $this->set('model1',$model1);

        $var21 = $var22 = $var23 = $var24 = $var25 = $var26 = $var27 = $var28 = $var29 = 0;
        $a21 = $a22 = $a23 = $a24 = $a25 = $a26 = $a27 = $a28 = $a29 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model2 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'RMU (Motorize)']);
        foreach ($sn_model2 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var21++;
                        if($wps->status == 'acknowledged'){
                            $a21++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var22++;
                        if($wps->status == 'acknowledged'){
                            $a22++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var23++;
                        if($wps->status == 'acknowledged'){
                            $a23++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var24++;
                        if($wps->status == 'acknowledged'){
                            $a24++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var25++;
                        if($wps->status == 'acknowledged'){
                            $a25++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var26++;
                        if($wps->status == 'acknowledged'){
                            $a26++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var27++;
                        if($wps->status == 'acknowledged'){
                            $a27++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var28++;
                        if($wps->status == 'acknowledged'){
                            $a28++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var29++;
                        if($wps->status == 'acknowledged'){
                            $a29++;
                        }
                    }
                }
            }
        }
        $model2->name = 'RMU (Motorize)';
        $model2->var21 = $var21;
        $model2->var22 = $var22;
        $model2->var23 = $var23;
        $model2->var24 = $var24;
        $model2->var25 = $var25;
        $model2->var26 = $var26;
        $model2->var27 = $var27;
        $model2->var28 = $var28;
        $model2->var29 = $var29;

        $model2->a21 = $a21;
        $model2->a22 = $a22;
        $model2->a23 = $a23;
        $model2->a24 = $a24;
        $model2->a25 = $a25;
        $model2->a26 = $a26;
        $model2->a27 = $a27;
        $model2->a28 = $a28;
        $model2->a29 = $a29;
        $this->set('model2',$model2);

        $var31 = $var32 = $var33 = $var34 = $var35 = $var36 = $var37 = $var38 = $var39 = 0;
        $a31 = $a32 = $a33 = $a34 = $a35 = $a36 = $a37 = $a38 = $a39 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model3 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'RMU CB 12kV']);
        foreach ($sn_model3 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var31++;
                        if($wps->status == 'acknowledged'){
                            $a31++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var32++;
                        if($wps->status == 'acknowledged'){
                            $a32++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var33++;
                        if($wps->status == 'acknowledged'){
                            $a33++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var34++;
                        if($wps->status == 'acknowledged'){
                            $a34++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var35++;
                        if($wps->status == 'acknowledged'){
                            $a35++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var36++;
                        if($wps->status == 'acknowledged'){
                            $a36++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var37++;
                        if($wps->status == 'acknowledged'){
                            $a37++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var38++;
                        if($wps->status == 'acknowledged'){
                            $a38++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var39++;
                        if($wps->status == 'acknowledged'){
                            $a39++;
                        }
                    }
                }
            }
        }
        $model3->name = 'RMU CB 12kV';
        $model3->var31 = $var31;
        $model3->var32 = $var32;
        $model3->var33 = $var33;
        $model3->var34 = $var34;
        $model3->var35 = $var35;
        $model3->var36 = $var36;
        $model3->var37 = $var37;
        $model3->var38 = $var38;
        $model3->var39 = $var39;

        $model3->a31 = $a31;
        $model3->a32 = $a32;
        $model3->a33 = $a33;
        $model3->a34 = $a34;
        $model3->a35 = $a35;
        $model3->a36 = $a36;
        $model3->a37 = $a37;
        $model3->a38 = $a38;
        $model3->a39 = $a39;
        $this->set('model3',$model3);

        $var41 = $var42 = $var43 = $var44 = $var45 = $var46 = $var47 = $var48 = $var49 = 0;
        $a41 = $a42 = $a43 = $a44 = $a45 = $a46 = $a47 = $a48 = $a49 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model4 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'RMU CB 17.5kV']);
        foreach ($sn_model4 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var41++;
                        if($wps->status == 'acknowledged'){
                            $a41++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var42++;
                        if($wps->status == 'acknowledged'){
                            $a42++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var43++;
                        if($wps->status == 'acknowledged'){
                            $a43++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var44++;
                        if($wps->status == 'acknowledged'){
                            $a44++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var45++;
                        if($wps->status == 'acknowledged'){
                            $a45++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var46++;
                        if($wps->status == 'acknowledged'){
                            $a46++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var47++;
                        if($wps->status == 'acknowledged'){
                            $a47++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var48++;
                        if($wps->status == 'acknowledged'){
                            $a48++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var49++;
                        if($wps->status == 'acknowledged'){
                            $a49++;
                        }
                    }
                }
            }
        }
        $model4->name = 'RMU CB 17.5kV';
        $model4->var41 = $var41;
        $model4->var42 = $var42;
        $model4->var43 = $var43;
        $model4->var44 = $var44;
        $model4->var45 = $var45;
        $model4->var46 = $var46;
        $model4->var47 = $var47;
        $model4->var48 = $var48;
        $model4->var49 = $var49;

        $model4->a41 = $a41;
        $model4->a42 = $a42;
        $model4->a43 = $a43;
        $model4->a44 = $a44;
        $model4->a45 = $a45;
        $model4->a46 = $a46;
        $model4->a47 = $a47;
        $model4->a48 = $a48;
        $model4->a49 = $a49;
        $this->set('model4',$model4);

        $var51 = $var52 = $var53 = $var54 = $var55 = $var56 = $var57 = $var58 = $var59 = 0;
        $a51 = $a52 = $a53 = $a54 = $a55 = $a56 = $a57 = $a58 = $a59 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model5 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'CSU']);
        foreach ($sn_model5 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var51++;
                        if($wps->status == 'acknowledged'){
                            $a51++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var52++;
                        if($wps->status == 'acknowledged'){
                            $a52++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var53++;
                        if($wps->status == 'acknowledged'){
                            $a53++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var54++;
                        if($wps->status == 'acknowledged'){
                            $a54++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var55++;
                        if($wps->status == 'acknowledged'){
                            $a55++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var56++;
                        if($wps->status == 'acknowledged'){
                            $a56++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var57++;
                        if($wps->status == 'acknowledged'){
                            $a57++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var58++;
                        if($wps->status == 'acknowledged'){
                            $a58++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var59++;
                        if($wps->status == 'acknowledged'){
                            $a59++;
                        }
                    }
                }
            }
        }
        $model5->name = 'CSU';
        $model5->var51 = $var51;
        $model5->var52 = $var52;
        $model5->var53 = $var53;
        $model5->var54 = $var54;
        $model5->var55 = $var55;
        $model5->var56 = $var56;
        $model5->var57 = $var57;
        $model5->var58 = $var58;
        $model5->var59 = $var59;

        $model5->a51 = $a51;
        $model5->a52 = $a52;
        $model5->a53 = $a53;
        $model5->a54 = $a54;
        $model5->a55 = $a55;
        $model5->a56 = $a56;
        $model5->a57 = $a57;
        $model5->a58 = $a58;
        $model5->a59 = $a59;
        $this->set('model5',$model5);

        $var61 = $var62 = $var63 = $var64 = $var65 = $var66 = $var67 = $var68 = $var69 = 0;
        $a61 = $a62 = $a63 = $a64 = $a65 = $a66 = $a67 = $a68 = $a69 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model6 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'Accessories']);
        foreach ($sn_model6 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var61++;
                        if($wps->status == 'acknowledged'){
                            $a61++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var62++;
                        if($wps->status == 'acknowledged'){
                            $a62++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var63++;
                        if($wps->status == 'acknowledged'){
                            $a63++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var64++;
                        if($wps->status == 'acknowledged'){
                            $a64++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var65++;
                        if($wps->status == 'acknowledged'){
                            $a65++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var66++;
                        if($wps->status == 'acknowledged'){
                            $a66++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var67++;
                        if($wps->status == 'acknowledged'){
                            $a67++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var68++;
                        if($wps->status == 'acknowledged'){
                            $a68++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var69++;
                        if($wps->status == 'acknowledged'){
                            $a69++;
                        }
                    }
                }
            }
        }
        $model6->name = 'Accessories';
        $model6->var61 = $var61;
        $model6->var62 = $var62;
        $model6->var63 = $var63;
        $model6->var64 = $var64;
        $model6->var65 = $var65;
        $model6->var66 = $var66;
        $model6->var67 = $var67;
        $model6->var68 = $var68;
        $model6->var69 = $var69;

        $model6->a61 = $a61;
        $model6->a62 = $a62;
        $model6->a63 = $a63;
        $model6->a64 = $a64;
        $model6->a65 = $a65;
        $model6->a66 = $a66;
        $model6->a67 = $a67;
        $model6->a68 = $a68;
        $model6->a69 = $a69;
        $this->set('model6',$model6);


        $var71 = $var72 = $var73 = $var74 = $var75 = $var76 = $var77 = $var78 = $var79 = 0;
        $a71 = $a72 = $a73 = $a74 = $a75 = $a76 = $a77 = $a78 = $a79 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model7 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'Services']);
        foreach ($sn_model7 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var71++;
                        if($wps->status == 'acknowledged'){
                            $a71++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var72++;
                        if($wps->status == 'acknowledged'){
                            $a72++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var73++;
                        if($wps->status == 'acknowledged'){
                            $a73++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var74++;
                        if($wps->status == 'acknowledged'){
                            $a74++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var75++;
                        if($wps->status == 'acknowledged'){
                            $a75++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var76++;
                        if($wps->status == 'acknowledged'){
                            $a76++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var77++;
                        if($wps->status == 'acknowledged'){
                            $a77++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var78++;
                        if($wps->status == 'acknowledged'){
                            $a78++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var79++;
                        if($wps->status == 'acknowledged'){
                            $a79++;
                        }
                    }
                }
            }
        }
        $model7->name = 'Services';
        $model7->var71 = $var71;
        $model7->var72 = $var72;
        $model7->var73 = $var73;
        $model7->var74 = $var74;
        $model7->var75 = $var75;
        $model7->var76 = $var76;
        $model7->var77 = $var77;
        $model7->var78 = $var78;
        $model7->var79 = $var79;

        $model7->a71 = $a71;
        $model7->a72 = $a72;
        $model7->a73 = $a73;
        $model7->a74 = $a74;
        $model7->a75 = $a75;
        $model7->a76 = $a76;
        $model7->a77 = $a77;
        $model7->a78 = $a78;
        $model7->a79 = $a79;
        $this->set('model7',$model7);


        $var81 = $var82 = $var83 = $var84 = $var85 = $var86 = $var87 = $var88 = $var89 = 0;
        $a81 = $a82 = $a83 = $a84 = $a85 = $a86 = $a87 = $a88 = $a89 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model8 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'Feeder Pillar/Indoor LV Board']);
        foreach ($sn_model8 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var81++;
                        if($wps->status == 'acknowledged'){
                            $a81++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var82++;
                        if($wps->status == 'acknowledged'){
                            $a82++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var83++;
                        if($wps->status == 'acknowledged'){
                            $a83++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var84++;
                        if($wps->status == 'acknowledged'){
                            $a84++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var85++;
                        if($wps->status == 'acknowledged'){
                            $a85++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var86++;
                        if($wps->status == 'acknowledged'){
                            $a86++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var87++;
                        if($wps->status == 'acknowledged'){
                            $a87++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var88++;
                        if($wps->status == 'acknowledged'){
                            $a88++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var89++;
                        if($wps->status == 'acknowledged'){
                            $a89++;
                        }
                    }
                }
            }
        }
        $model8->name = 'Feeder Pillar/Indoor LV Board';
        $model8->var81 = $var81;
        $model8->var82 = $var82;
        $model8->var83 = $var83;
        $model8->var84 = $var84;
        $model8->var85 = $var85;
        $model8->var86 = $var86;
        $model8->var87 = $var87;
        $model8->var88 = $var88;
        $model8->var89 = $var89;

        $model8->a81 = $a81;
        $model8->a82 = $a82;
        $model8->a83 = $a83;
        $model8->a84 = $a84;
        $model8->a85 = $a85;
        $model8->a86 = $a86;
        $model8->a87 = $a87;
        $model8->a88 = $a88;
        $model8->a89 = $a89;
        $this->set('model8',$model8);

        $var91 = $var92 = $var93 = $var94 = $var95 = $var96 = $var97 = $var98 = $var99 = 0;
        $a91 = $a92 = $a93 = $a94 = $a95 = $a96 = $a97 = $a98 = $a99 = 0;
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $sn_model9 = $this->SerialNumber->find('all')
            ->Where(['model'=> 'Distribution Board']);
        foreach ($sn_model9 as $snm){
            $wip = $this->Wip->find('all')
                ->Where(['serial_no'=> $snm->id]);
            foreach ($wip as $wp){
                $wips = $this->WipSection->find('all')
                    ->Where(['wip_id' => $wp->id]);
                foreach ($wips as $wps){
                    if($wps->section == 'Welding 1'){
                        $var91++;
                        if($wps->status == 'acknowledged'){
                            $a91++;
                        }
                    }
                    if($wps->section == 'Main link Tank'){
                        $var92++;
                        if($wps->status == 'acknowledged'){
                            $a92++;
                        }
                    }
                    if($wps->section == 'Drive Mechanism'){
                        $var93++;
                        if($wps->status == 'acknowledged'){
                            $a93++;
                        }
                    }
                    if($wps->section == 'Vacuum Chamber'){
                        $var94++;
                        if($wps->status == 'acknowledged'){
                            $a94++;
                        }
                    }
                    if($wps->section == 'Welding 2'){
                        $var95++;
                        if($wps->status == 'acknowledged'){
                            $a95++;
                        }
                    }
                    if($wps->section == 'Bta'){
                        $var96++;
                        if($wps->status == 'acknowledged'){
                            $a96++;
                        }
                    }
                    if($wps->section == 'Metal Clad'){
                        $var97++;
                        if($wps->status == 'acknowledged'){
                            $a97++;
                        }
                    }
                    if($wps->section == 'Wiring'){
                        $var98++;
                        if($wps->status == 'acknowledged'){
                            $a98++;
                        }
                    }
                    if($wps->section == 'Testing'){
                        $var99++;
                        if($wps->status == 'acknowledged'){
                            $a99++;
                        }
                    }
                }
            }
        }
        $model9->name = 'Services';
        $model9->var91 = $var91;
        $model9->var92 = $var92;
        $model9->var93 = $var93;
        $model9->var94 = $var94;
        $model9->var95 = $var95;
        $model9->var96 = $var96;
        $model9->var97 = $var97;
        $model9->var98 = $var98;
        $model9->var99 = $var99;

        $model9->a91 = $a91;
        $model9->a92 = $a92;
        $model9->a93 = $a93;
        $model9->a94 = $a94;
        $model9->a95 = $a95;
        $model9->a96 = $a96;
        $model9->a97 = $a97;
        $model9->a98 = $a98;
        $model9->a99 = $a99;
        $this->set('model9',$model9);
    }
    public function monthlyProgress(){
        $month = $this->request->getQuery('month');
        $year = $this->request->getQuery('year');
        $section = $this->request->getQuery('section');
        if($month == null){
            $month = date('m');
        }
        if($year == null){
            $year = date('Y');
        }
        if($section == null){
            $section = 'Welding 1';
        }
        $this->loadModel('SerialNumber');
        $this->loadModel('WipSection');
        $operator = [];
        $all_op = [];
        $wip = $this->Wip->find('all');
        foreach ($wip as $w){
            if( date('m/Y',strtotime($w->date) ) == $month.'/'.$year){
                $op = $this->WipSection->find('all')
                    ->Where(['wip_id'=>$w->id]);
                $w->selected = 'yes';
                foreach ($op as $p){
                    $operator[] = $p->operator_name;
                }
            }
        }
        foreach (array_unique($operator) as $op_name){
            $all_op[] = $op_name;
        }
        $op_count = new \stdClass();
        $total_count = 0;
        for( $i=0;$i < sizeof($all_op);$i++ ){
            $ack1 = $ack2 = $ack3 = $ack4 = $ack5 = $ack6 = $ack7 = $ack8 = $ack9 = 0;
            $rej1 = $rej2 = $rej3 = $rej4 = $rej5 = $rej6 = $rej7 = $rej8 = $rej9 =0;
            foreach ($wip as $wp){
                if($wp->selected == 'yes'){
                    $sn_details = $this->SerialNumber->find('all')
                        ->Where(['id'=>$wp->serial_no]);
                    foreach ($sn_details as $snd){
                        if($snd->model == 'RMU INS24'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack1 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej1 ++;
                                $total_count ++;
                            }
                        }
                        if($snd->model == 'RMU (Motorize)'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack2 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej2 ++;
                                $total_count ++;
                            }
                        }
                        if($snd->model == 'RMU CB 12kV'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack3 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej3 ++;
                                $total_count ++;
                            }
                        }
                        if($snd->model == 'RMU CB 17.5kV'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack4 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej4 ++;
                                $total_count ++;
                            }
                        }
                        if($snd->model == 'CSU'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack5 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> trim($section,'%20')]);
                            foreach ($wips_rej as $wps){
                                $rej5 ++;
                            }
                        }

                        if($snd->model == 'Accessories'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack6 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej6 ++;
                                $total_count ++;
                            }
                        }

                        if($snd->model == 'Services'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack7 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej7 ++;
                                $total_count ++;
                            }
                        }

                        if($snd->model == 'Feeder Pillar/Indoor LV Board'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack8 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej8 ++;
                                $total_count ++;
                            }
                        }
                        if($snd->model == 'Distribution Board'){
                            $wips_ack = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'acknowledged'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_ack as $wps){
                                $ack9 ++;
                                $total_count ++;
                            }
                            $wips_rej = $this->WipSection->find('all')
                                ->Where(['wip_id'=>$wp->id])
                                ->Where(['operator_name' => $all_op[$i]])
                                ->Where(['status'=> 'rejected'])
                                ->Where(['section'=> $section]);
                            foreach ($wips_rej as $wps){
                                $rej9 ++;
                                $total_count ++;
                            }
                        }
                    }
                    $sec_ack1 = 'ack1'.$i;
                    $sec_rej1 = 'rej1'.$i;
                    $sec_ack2 = 'ack2'.$i;
                    $sec_rej2 = 'rej2'.$i;
                    $sec_ack3 = 'ack3'.$i;
                    $sec_rej3 = 'rej3'.$i;
                    $sec_ack4 = 'ack4'.$i;
                    $sec_rej4 = 'rej4'.$i;
                    $sec_ack5 = 'ack5'.$i;
                    $sec_rej5 = 'rej5'.$i;
                    $sec_ack6 = 'ack6'.$i;
                    $sec_rej6 = 'rej6'.$i;
                    $sec_ack7 = 'ack7'.$i;
                    $sec_rej7 = 'rej7'.$i;
                    $sec_ack8 = 'ack8'.$i;
                    $sec_rej8 = 'rej8'.$i;
                    $sec_ack9 = 'ack9'.$i;
                    $sec_rej9 = 'rej9'.$i;
                    $op_count->$sec_ack1 = $ack1;
                    $op_count->$sec_rej1= $rej1;
                    $op_count->$sec_ack2 = $ack2;
                    $op_count->$sec_rej2= $rej2;
                    $op_count->$sec_ack3 = $ack3;
                    $op_count->$sec_rej3= $rej3;
                    $op_count->$sec_ack4 = $ack4;
                    $op_count->$sec_rej4= $rej4;
                    $op_count->$sec_ack5 = $ack5;
                    $op_count->$sec_rej5= $rej5;
                    $op_count->$sec_ack6 = $ack6;
                    $op_count->$sec_rej6= $rej6;
                    $op_count->$sec_ack7 = $ack7;
                    $op_count->$sec_rej7= $rej7;
                    $op_count->$sec_ack8 = $ack8;
                    $op_count->$sec_rej8= $rej8;
                    $op_count->$sec_ack9 = $ack9;
                    $op_count->$sec_rej9= $rej9;
                }
            }
        }

        $this->set('month', $month);
        $this->set('year', $year);
        $this->set('section', $section);
        $this->set('wip', $wip);
        $this->set('operators', $all_op);
        $this->set('op_count', $op_count);
        $this->set('total', $total_count);
    }
    public function monthlyProgress2(){
        $this->loadModel('WipSection');
        $this->loadModel('SerialNumber');
        $month = $this->request->getQuery('month');
        $year = $this->request->getQuery('year');
        $section = $this->request->getQuery('section');
        $name = $this->request->getQuery('op_name');
        if($month == null){
            $month = date('m');
        }
        if($year == null){
            $year = date('Y');
        }
        $operator = [];
        $all_op = '';
        $wip = $this->Wip->find('all');
        foreach ($wip as $w){
            if( date('m/Y',strtotime($w->date) ) == $month.'/'.$year){
                $op = $this->WipSection->find('all')
                    ->Where(['wip_id'=>$w->id]);
                $w->selected = 'yes';
                foreach ($op as $p){
                    $operator[] = $p->operator_name;
                }
            }
        }
        $opn = [];
        foreach (array_unique($operator) as $op_name){
                $opn[] = $op_name;
            foreach ($wip as $wp){
                $section_names = [];
                if($wp->selected == 'yes'){
                    $wips = $this->WipSection->find('all')
                        ->Where(['operator_name'=>$op_name]);
                    foreach ($wips as $wps){
                        $section_names[] = $wps->section;
                    }
                }
            }
            $sec_names = [];
            if($section == null){
                $section = $section_names[0];
            }
            foreach (array_unique($section_names) as $s){
                $sec_names[] = $s;
            }
            $all_op .= '{label:"'.$op_name.'"';
            $count = 0;
            $s_names = null;
            foreach($sec_names as $item){
                $s_names .= '"'.$item.'",';
                $count++;
            }
            $s_names = rtrim($s_names, ',');
            $all_op .= ',section:['.$s_names.']},';
        }
        $all_op = rtrim($all_op,',');

        if($name == null){
            if(isset($opn[0])){
                $name = $opn[0];
            }
        }
        $final = $this->WipSection->find('all')
            ->Where(['operator_name'=>$name])
            ->Where(['section'=>$section]);
        foreach ($final as $fn){
            $sec_wip = $this->Wip->get($fn->wip_id, [
                'contain' => []
            ]);
            $fn->sec_wip = $sec_wip;
            $sec_sn = $this->SerialNumber->get($sec_wip->serial_no, [
                'contain' => []
            ]);
            $fn->sec_sn = $sec_sn;
        }
        $this->set('year',$year);
        $this->set('month',$month);
        $this->set('all_op',$all_op);
        $this->set('final',$final);
        $this->set('s',$section);
        $this->set('n',$name);
        $this->set('operators',array_unique($operator));
    }
    public function isAuthorized($user){
        if ($this->request->getParam('action') === 'index' || $this->request->getParam('action') === 'report' ||  $this->request->getParam('action') === 'view' || $this->request->getParam('action') === 'sectionStat' || $this->request->getParam('action') === 'dm' || $this->request->getParam('action') === 'mc' || $this->request->getParam('action') === 'mlt' || $this->request->getParam('action') === 'monthlyProgress' || $this->request->getParam('action') === 'monthlyProgress2' || $this->request->getParam('action') === 'statReport' || $this->request->getParam('action') === 'testing' || $this->request->getParam('action') === 'vc' || $this->request->getParam('action') === 'welding1' || $this->request->getParam('action') === 'welding2' || $this->request->getParam('action') === 'wiring') {
            return true;
        }
        if(isset($user['role']) && $user['role'] === 'requester'){
            if(in_array($this->request->action, ['add'])){
                return true;
            }
        }
        if(isset($user['role']) && $user['role'] === 'verifier'){
            if(in_array($this->request->action, ['edit'])){
                return true;
            }
        }
        return parent::isAuthorized($user);
    }
}
